{"version":3,"file":"static/js/748.db65f003.chunk.js","mappings":"4NA8EA,EAtEmB,WACjB,IAAAA,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA4CL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAA4BT,EAAAA,EAAAA,UAAS,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAsCb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,GAAyCC,EAAAA,EAAAA,KAAjCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,cAExBC,EAAAA,EAAAA,YAAU,WACRC,EAAUZ,GAAQ,EACpB,GAAG,IAEH,IAAMY,EAAY,SAACZ,EAAQa,GACfhB,GAAVgB,GACAH,EAAaV,GAAQc,KAAKC,EAC5B,EAEMA,EAAqB,SAACC,GAC1B,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACzBD,GAAQ,GAEVxB,EAAc,GAAD0B,QAAAC,EAAAA,EAAAA,GAAK5B,IAAU4B,EAAAA,EAAAA,GAAKJ,KACjCnB,GAAkB,GAClBI,EAAUD,EAAS,GACnBK,EAAeY,EACjB,EAsBA,IAAMI,EApBN,SAAqBC,GACnB,IAAMD,EAAQC,EAAIC,KAAI,SAACC,EAAMC,GAC3B,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,UAC1BC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,GAAE,WAAAZ,OAAaK,EAAKQ,IAAKJ,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OACEO,IAAKT,EAAKU,UACVC,IAAKX,EAAKY,MACVT,UAAU,sBAEZD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAAEJ,EAAKY,SACzCV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SAAEJ,EAAKa,YARZZ,EAYtC,IAEA,OAAOC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,SAAEP,GACvC,CAEciB,CAAY9C,GAEpB+C,EAAe9B,GAAQiB,EAAAA,EAAAA,KAACc,EAAAA,EAAY,IAAM,KAC1CC,EAAUjC,IAAYZ,GAAiB8B,EAAAA,EAAAA,KAACgB,EAAAA,EAAO,IAAM,KAE3D,OACEb,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CAC1BW,EACAE,EACApB,GACDK,EAAAA,EAAAA,KAAA,UACEiB,SAAU/C,EACVgD,MAAO,CAAEC,QAASzC,EAAc,OAAS,SACzCuB,UAAU,mCACVmB,QAAS,kBAAMlC,EAAUZ,EAAO,EAAC4B,UAEjCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,SAAC,kBAI/B,EChEA,EATmB,WACjB,OACEF,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAAnB,UAEEF,EAAAA,EAAAA,KAACsB,EAAU,KAGjB,C","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./comicsList.scss\";\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <NavLink to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </NavLink>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  const items = renderItems(comicsList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","// import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      {/* <AppBanner /> */}\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemLoading","setnewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","items","arr","map","item","i","_jsx","className","children","_jsxs","NavLink","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","display","onClick","_Fragment","ComicsList"],"sourceRoot":""}